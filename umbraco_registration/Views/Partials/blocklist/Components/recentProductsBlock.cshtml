@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockListItem>
@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters
@{
    var content = Model.Content;
    var settings = Model.Settings;

    var backgroundColour = string.Empty;
    if (settings != null && settings.HasProperty("backgroundColour") && settings.HasValue("backgroundColour"))
    {
        backgroundColour = $"bg-{settings.Value<ColorPickerValueConverter.PickedColor>("backgroundColour")?.Label.ToLower().Replace(" ", "-")}";
    }

    IEnumerable<IPublishedContent> recentProducts = content.HasValue("productCategory") 
        ? content.Value<IPublishedContent>("recentProducts").Children().Where(x => x.Value<IEnumerable<IPublishedContent>>("categories").Contains(content.Value<IPublishedContent>("productCategory"))).Take(content.Value<int>("maximumItems"))
        : content.Value<IPublishedContent>("recentProducts").Children().Take(content.Value<int>("maximumItems"));
}
<div class="py-5 @backgroundColour">
    <div class="container">
        <partial name="~/Views/Partials/blocklist/Components/blockHeading.cshtml" model="Model" />
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3 mt-3">
            @if (content.Value("recentProducts") != null)
            {
                foreach (var product in recentProducts)
                {
                    <div class="col d-flex">
                        <div class="card shadow-sm">
                            <img class="card-img-top" src="@(product.Value<IEnumerable<MediaWithCrops>>("photos").FirstOrDefault().GetCropUrl("thumbnail"))" role="img" preserveAspectRatio="xMidYMid slice" focusable="false" />
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@product.Value("productName")</h5>
                                <p class="card-text flex-grow-1">@(product.Value<string>("description")?.Truncate(265))</p>
                                <div class="d-grid">
                                    <a href="@product.Url()" class="btn btn-primary stretched-link">@Umbraco.GetDictionaryValue("View Product Button")</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>